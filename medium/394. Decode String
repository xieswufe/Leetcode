/Thinked for a long time, I should notice that one [] means the former string should be pushed in stack and then pop out*/
class Solution {
   public String decodeString(String s) {
        Stack<Integer> count = new Stack<Integer>();
        Stack<String> word = new Stack<String>();
        String result = "";
        char[] total = s.toCharArray();
        for(int i = 0 ; i < total.length; i++){
            if((total[i] >= 48) && (total[i] <= 57)) {
                int num = 0;
                while ((total[i] >= 48) && (total[i] <= 57)) {
                    num = num * 10 + (total[i] - 48);
                    i++;
                }
                count.push(num);
            }

            if(total[i] == '['){
                word.push(result);
                result = "";
            }
            else if(total[i] == ']'){
                StringBuilder sb = new StringBuilder("");
                int countnum = count.pop();
                for(int j=0; j<countnum; j++){
                    sb = sb.append(result);
                }
                result = word.pop()+ sb.toString();

            }
            else{
                result = result + total[i];
            }
        }
        return result;
    }
}
