// Time Complexity : O(m*n*k)

public int[][] multiply(int[][] A, int[][] B) {
        if (A == null || B == null || A.length == 0) {
            return null;
        }
        int[][] result = new int[A.length][B[0].length];
        
        int m = A.length;
        int n = A[0].length;
        int k = B[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < k; j++) {
                for (int x = 0; x < n; x ++) {
                    result[i][j] += A[i][x] * B[x][j];
                }
            }
        }
        return result;
    }
    
    
    // The time complexity has not been improve so much, but it is specific in sparse matrix
    public int[][] multiply(int[][] A, int[][] B) {
        if (A == null || B == null || A.length == 0) {
            return null;
        }
        int[][] result = new int[A.length][B[0].length];
        int m = A.length;
        int n = A[0].length;
        int k = B[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (A[i][j] == 0) {
                    continue;
                }
                for (int x = 0; x < k; x ++) {
                    result[i][x] += A[i][j] * B[j][x];
                }
            }
        }
        return result;
    }
